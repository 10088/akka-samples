akka {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "sample.cqrs.CborSerializable" = jackson-cbor
    }
  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class

  cluster {
    roles = ["write-model", "read-model"]
  }

  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

}

cassandra-journal {
  events-by-tag {
    bucket-size = "Day"
  }
}

cassandra-query-journal {
  first-time-bucket = "20191023T00:00"

  //  events-by-tag {
  //    verbose-debug-logging = true
  //  }
}

#latency testing
cassandra-journal.events-by-tag.flush-interval = 0s
cassandra-journal.pubsub-notification = on
cassandra-query-journal.events-by-tag.eventual-consistency-delay = 50ms
cassandra-query-journal.refresh-interval = 3s

event-processor {
  id = "EventProcessor"            // type name of sharded event processor
  keep-alive-interval = 2 seconds  // event-processors ping interval
  tag-prefix = "tag"               // even processor tag prefix
  parallelism = 1                  // number of event processors
}

shopping.http.port = 0
shopping.askTimeout = 5 s


// config for the 1.0x branch

datastax-java-driver {
  basic.contact-points = [ "cassandra.eu-north-1.amazonaws.com" ]
  advanced.ssl-engine-factory {
    class = DefaultSslEngineFactory
  }
}